#!/usr/bin/env ruby

require 'green_eye_monitor/client'
require 'smart_energy_group/client'
require 'awesome_print'
require 'yaml'

seg_config = YAML.load_file('/etc/green_eye_monitor_collector/seg.yaml')
seg_config[:channels] ||= {}

gem = GreenEyeMonitor::Client.new(:serial_port => '/dev/ttyUSB1', :debug => false)

seg = SmartEnergyGroup::Client.new(seg_config[:site_id])

puts "Gem Serial: #{gem.serial}"
puts

gem.packet_format = :bin32_net

old_data = gem.send_one_packet
sleep(10)

loop do
  data = gem.send_one_packet(old_data)

  options = {
    :temperature => data.temperature,
    :power       => data.abs_watts,
    :amps        => data.current,
    :voltage     => [data.voltage]
  }

  seg_config[:channels].each do |type, channels|
    options[type] = Hash[channels.map { |i| [i, options[type][i - 1]] }]
  end

  seg.send_data('gem', options)

  puts
  puts '-------------------------'
  puts
  puts "Time: #{Time.now}"
  puts
  puts 'Realtime:'
  puts "  Voltage: #{options[:voltage].first}"
  puts "  Temp: #{options[:temperature].values.join(', ')}"
  puts "  Power: #{options[:power].values.join(', ')}"
  puts "  Current: #{options[:amps].values.join(', ')}"
  puts

  old_data = data

  sleep(60)
end
